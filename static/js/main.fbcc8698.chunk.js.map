{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Footer","to","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","index","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","About","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","response","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updateTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbcc8698.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ( {color, text, onClick} ) => {\r\n   \r\n    return (\r\n     <button onClick={onClick} style={{ backgroundColor: color }} className=\"btn\">{text}</button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue',\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport {useLocation} from 'react-router-dom'\r\nimport Button from './Button'\r\n\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n\r\n    const location =  useLocation()\r\n    \r\n    return (\r\n        <header className=\"header\">\r\n            <h1>{title}</h1>\r\n            {location.pathname === '/' && <Button color ={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onAdd}/>}\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\nexport default Header\r\n","import { Link } from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Link to='/about'>About</Link>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer","// X icon\r\nimport {FaTimes} from 'react-icons/fa'\r\n\r\nconst Task = ({task, onDelete, onToggle}) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>{task.text}<FaTimes style={{color: 'red', cursor: 'pointer'}} onClick={() => onDelete(task.id)}/></h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({tasks, onDelete, onToggle}) => {\r\n    return (\r\n        <>\r\n            {tasks.map((task, index) => (\r\n                <Task key={index} task={task} onDelete={onDelete} onToggle = {onToggle}/>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import {useState} from 'react'\r\n\r\nconst AddTask = ({onAdd}) => {\r\n\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!text){\r\n            alert('Please add a task!')\r\n            return\r\n        }\r\n\r\n        onAdd({text, day, reminder})\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type=\"text\" placeholder='Add Task' value={text} onChange={(e) => setText(e.target.value)}/>\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <input type=\"text\" placeholder='Add Day & Time' value={day} onChange={(e) => setDay(e.target.value)}/>\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type=\"checkbox\" checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}/>\r\n            </div>\r\n            <input type=\"submit\" value='Save Task' className='btn btn-block'/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { Link } from 'react-router-dom'\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h4>Version 1.0.0</h4>\r\n      <Link to='/'>Go Back</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About","import {useState, useEffect} from 'react'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport About from './components/About'\n\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n    getTasks()\n  }, [])\n\n// Fetch Tasks\nconst fetchTasks = async () =>{\n  const response = await fetch('http://localhost:5000/tasks')\n  const data = await response.json()\n\n  return data\n}\n\n// Fetch Task\nconst fetchTask = async (id) =>{\n  const response = await fetch(`http://localhost:5000/tasks/${id}`)\n  const data = await response.json()\n\n  return data\n}\n\n// Add Task\nconst addTask = async (task) => {\n  const response = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(task),\n    })\n\n    const data = await response.json()\n\n    setTasks([...tasks, data])\n\n  // Used to randomize id's before installing json server\n  // const id = Math.floor(Math.random() * 10000) + 1\n  // const newTask = {id, ...task}\n  // setTasks([...tasks, newTask])\n}\n\n// Delete Task\nconst deleteTask = async (id) =>{\n  await fetch(`http://localhost:5000/tasks/${id}`, {\n    method: 'DELETE',\n  })\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n// Toggle Reminder\nconst toggleReminder = async (id) =>{\n  const taskToToggle =  await fetchTask(id)\n  const updateTask = {...taskToToggle, reminder: !taskToToggle.reminder}\n\n  const response = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(updateTask),\n    })\n\n    const data = await response.json() \n\n  setTasks(tasks.map((task) =>\n    task.id === id ? {...task, reminder: data.reminder} : task\n  )\n  )\n}\nreturn (\n  <Router>\n    <div className='container'>\n      <Header\n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n      />\n      <Route\n        path='/'\n        exact\n        render={(props) => (\n          <>\n            {showAddTask && <AddTask onAdd={addTask} />}\n            {tasks.length > 0 ? (\n              <Tasks\n                tasks={tasks}\n                onDelete={deleteTask}\n                onToggle={toggleReminder}\n              />\n            ) : (\n              'No Tasks To Show'\n            )}\n          </>\n        )}\n      />\n      <Route path='/about' component={About} />\n      <Footer />\n    </div>\n  </Router>\n)\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}